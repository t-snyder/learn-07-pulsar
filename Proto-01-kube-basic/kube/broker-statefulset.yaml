# Source: pulsar/templates/broker-statefulset.yaml
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "pulsar-mini-broker"
  namespace: "pulsar"
  labels:
    app: pulsar
    chart: pulsar-3.9.0
    release: pulsar-mini
    heritage: Helm
    cluster: pulsar-mini
    component: broker
spec:
  serviceName: "pulsar-mini-broker"
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: pulsar-mini
      component: broker
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: pulsar-mini
        cluster: pulsar-mini
        component: broker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: "pulsar-mini-broker-acct"
#      affinity:
      terminationGracePeriodSeconds: 30
#      initContainers:
      # This init container will wait for zookeeper to be ready before
      # deploying the bookies
#      - name: wait-zookeeper-ready
#        image: "apachepulsar/pulsar-all:4.0.2"
#        imagePullPolicy: "IfNotPresent"
#        resources: 
#          requests:
#            cpu: 0.1
#            memory: 256Mi
#        command: ["timeout", "600", "sh", "-c"]
#        args:
#          - >-
#            
#            export BOOKIE_MEM="-Xmx128M";
#            until timeout 15 bin/pulsar zookeeper-shell -server pulsar-mini-zookeeper:2181 get /admin/clusters/pulsar-mini; do
#              echo "pulsar cluster pulsar-mini isn't initialized yet ... check in 3 seconds ..." && sleep 3;
#            done;
#        volumeMounts:
        
      # This init container will wait for bookkeeper to be ready before
      # deploying the broker
#      - name: wait-bookkeeper-ready
#        image: "apachepulsar/pulsar-all:4.0.2"
#        imagePullPolicy: "IfNotPresent"
#        resources: 
#          requests:
#            cpu: 0.1
#            memory: 256Mi
#        command: ["timeout", "120", "sh", "-c"]
#        args:
#          - >
#            
#            bin/apply-config-from-env.py conf/bookkeeper.conf;
#            export BOOKIE_MEM="-Xmx128M";
#            until timeout 15 bin/bookkeeper shell whatisinstanceid; do
#              echo "bookkeeper cluster is not initialized yet. backoff for 3 seconds ...";
#              sleep 3;
#            done;
#            echo "bookkeeper cluster is already initialized";
#            bookieServiceNumber="$(nslookup -timeout=10 pulsar-mini-bookie | grep Name | wc -l)";
#            until [ ${bookieServiceNumber} -ge 1 ]; do
#              echo "bookkeeper cluster pulsar-mini isn't ready yet ... check in 10 seconds ...";
#              sleep 10;
#              bookieServiceNumber="$(nslookup -timeout=10 pulsar-mini-bookie | grep Name | wc -l)";
#            done;
#            echo "bookkeeper cluster is ready";
#        envFrom:
#          - configMapRef:
#              name: "pulsar-mini-bookie"
#        volumeMounts:
          
      containers:
      - name: "pulsar-mini-broker"
        image: "apachepulsar/pulsar-all:4.0.2"
        imagePullPolicy: "IfNotPresent"
#        livenessProbe:
#          httpGet:
#            path: /status.html
#            port: 8080
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
#          failureThreshold: 10
#        readinessProbe:
#          httpGet:
#            path: /status.html
#            port: 8080
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
#          failureThreshold: 10
#        resources:
#          requests:
#            cpu: 0.2
#            memory: 512Mi
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/broker.conf;
          bin/gen-yml-from-env.py conf/functions_worker.yml;
          echo "OK" > "${statusFilePath:-status}";
          
          timeout 15 bin/pulsar zookeeper-shell -server pulsar-mini-zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}.pulsar-mini-broker.pulsar.svc.cluster.local:8080;
          while [ $? -eq 0 ]; do
            echo "broker ${HOSTNAME}.pulsar-mini-broker.pulsar.svc.cluster.local znode still exists ... check in 10 seconds ...";
            sleep 10;
            timeout 15 bin/pulsar zookeeper-shell -server pulsar-mini-zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}.pulsar-mini-broker.pulsar.svc.cluster.local:8080;
          done;
          cat conf/pulsar_env.sh;
          OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar broker;
        ports:
        # prometheus needs to access /metrics endpoint
        - name: http
          containerPort: 8080
        - name: "pulsar"
          containerPort: 6650
        - name: https
          containerPort: 443
        - name: "pulsar-tls"
          containerPort: 6651
        envFrom:
        - configMapRef:
            name: "pulsar-mini-broker"
        volumeMounts:
          
        env:
      volumes:
---

